#
# This program is free software; you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by 
# the Free Software Foundation; either version 2 of the License, or 
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
# for more details.
# 
# You should have received a copy of the GNU General Public License along 
# with this program; if not, write to the Free Software Foundation, Inc., 
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#
# This file is part of XDD
#
# Description: XDD Makefile
#

#
# Autoconf provided values
#
XDD_DIR := @CONFIG_PROJECT_DIR@
BUILD_DIR := @CONFIG_BUILD_DIR@
INSTALL_DIR := @prefix@
XFS_ENABLED_DEF := @CONFIG_XFS_ENABLED@ @CONFIG_XFS_PACKAGE@ @CONFIG_LINUX_MAGIC@
CONFIDENCE_ENABLED := @CONFIG_CONFIDENCE_ENABLED@

#
# Configuration
#
SHELL 	=	/bin/sh
OS 	= 	$(shell uname)
INSTALL = $(XDD_DIR)/contrib/install-sh
#
# Version information
#
DATESTAMP =	$(shell date +%m%d%y )
BUILD 	=	$(shell date +%H%M )
PROJECT =	xdd
VERSION_MAJOR =	7
VERSION_MINOR = 0
VERSION_REV = 0
VERSION_BUILD = rc17pre
VERSION = $(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_REV)-$(VERSION_BUILD)
XDD_VERSION = $(OS).$(VERSION).$(DATESTAMP).Build.$(BUILD)
XDDVERSION = \"$(XDD_VERSION)\"

#
# Source locations
#
HDR_DIR = src
SRC_DIR = src

#
# Source files
#
XDD_SOURCE = $(SRC_DIR)/access_pattern.c \
	$(SRC_DIR)/barrier.c \
	$(SRC_DIR)/datapatterns.c \
	$(SRC_DIR)/debug.c \
	$(SRC_DIR)/end_to_end.c \
	$(SRC_DIR)/end_to_end_init.c \
	$(SRC_DIR)/global_clock.c \
	$(SRC_DIR)/global_data.c \
	$(SRC_DIR)/global_time.c \
	$(SRC_DIR)/heartbeat.c \
	$(SRC_DIR)/info_display.c \
	$(SRC_DIR)/initialization.c \
	$(SRC_DIR)/interactive.c \
	$(SRC_DIR)/interactive_func.c \
	$(SRC_DIR)/interactive_table.c \
	$(SRC_DIR)/io_buffers.c \
	$(SRC_DIR)/lockstep.c \
	$(SRC_DIR)/memory.c \
	$(SRC_DIR)/parse.c \
	$(SRC_DIR)/parse_func.c \
	$(SRC_DIR)/parse_table.c \
	$(SRC_DIR)/pclk.c \
	$(SRC_DIR)/preallocate.c \
	$(SRC_DIR)/processor.c \
	$(SRC_DIR)/ptds.c \
	$(SRC_DIR)/qthread.c \
	$(SRC_DIR)/qthread_cleanup.c \
	$(SRC_DIR)/qthread_init.c \
	$(SRC_DIR)/qthread_io.c \
	$(SRC_DIR)/qthread_io_for_os.c \
	$(SRC_DIR)/qthread_ttd_after_io_op.c \
	$(SRC_DIR)/qthread_ttd_before_io_op.c \
	$(SRC_DIR)/read_after_write.c \
	$(SRC_DIR)/restart.c \
	$(SRC_DIR)/results_display.c \
	$(SRC_DIR)/results_manager.c \
	$(SRC_DIR)/schedule.c \
	$(SRC_DIR)/sg.c \
	$(SRC_DIR)/signals.c \
	$(SRC_DIR)/target_cleanup.c \
	$(SRC_DIR)/target_init.c \
	$(SRC_DIR)/target_open.c \
	$(SRC_DIR)/target_pass.c \
	$(SRC_DIR)/target_pass_e2e_specific.c \
	$(SRC_DIR)/target_pass_qt_locator.c \
	$(SRC_DIR)/target_thread.c \
	$(SRC_DIR)/target_ttd_before_io_op.c \
	$(SRC_DIR)/target_ttd_after_pass.c \
	$(SRC_DIR)/target_ttd_before_pass.c \
	$(SRC_DIR)/timestamp.c \
	$(SRC_DIR)/utils.c \
	$(SRC_DIR)/verify.c \
	$(SRC_DIR)/xdd.c 

XDD_HEADERS = $(HDR_DIR)/access_pattern.h \
	$(HDR_DIR)/barrier.h \
	$(HDR_DIR)/end_to_end.h \
	$(HDR_DIR)/datapatterns.h \
	$(HDR_DIR)/lockstep.h \
	$(HDR_DIR)/misc.h \
	$(HDR_DIR)/parse.h \
	$(HDR_DIR)/pclk.h \
	$(HDR_DIR)/ptds.h \
	$(HDR_DIR)/read_after_write.h \
	$(HDR_DIR)/restart.h \
	$(HDR_DIR)/results.h \
	$(HDR_DIR)/sg.h \
	$(HDR_DIR)/sg_err.h \
	$(HDR_DIR)/sg_include.h \
	$(HDR_DIR)/target_offset_table.h \
	$(HDR_DIR)/timestamp.h \
	$(HDR_DIR)/xdd.h \
	$(HDR_DIR)/xdd_common.h \
	$(HDR_DIR)/xdd_global_data.h \
	$(HDR_DIR)/xdd_prototypes.h \
	$(HDR_DIR)/xdd_version.h

#
# Objects
#
XDD_OBJECTS = $(patsubst %.c, %.o, $(filter %.c, $(XDD_SOURCE)))
TS_OBJECTS = $(SRC_DIR)/timeserver.o $(SRC_DIR)/pclk.o
GT_OBJECTS = $(SRC_DIR)/gettime.o \
	$(SRC_DIR)/global_time.o \
	$(SRC_DIR)/pclk.o

#
# Default build settings
#
CC = 		gcc
INCLUDES = -I$(SRC_DIR)
COMMONFLAGS = $(INCLUDES) @CONFIG_CFLAGS@ \
		-DXDD_VERSION=$(XDDVERSION) \
		-DXDD_VERSION_MAJOR=$(VERSION_MAJOR) -DXDD_VERSION_MINOR=$(VERSION_MINOR) -DXDD_VERSION_REV=$(VERSION_REV) \
		$(CONFIDENCE_ENABLED)
COMMONLIBS = @CONFIG_LDFLAGS@
CFLAGS = $(COMMONFLAGS) -DLINUX -O2 -g
LIBRARIES =     $(COMMONLIBS) -lpthread -lrt

#
# Platform specific build settings
#
$(info Making xdd for $(OS))
ifeq '$(OS)' 'Linux'
CFLAGS = $(COMMONFLAGS) -DLINUX -O2 -DSG_IO -D__INTEL__ -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $(XFS_ENABLED_DEF) -g -fno-strict-aliasing -Wall
endif
ifeq '$(OS)' 'Darwin' 
CFLAGS = $(COMMONFLAGS) -DOSX -O2 -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -g
OS = 		OSX
endif
ifeq '$(OS)' 'FreeBSD' 
CFLAGS = $(COMMONFLAGS) -DFREEBSD -O2 -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -g
endif
ifeq '$(OS)' 'Solaris' 
CC = 		cc
CFLAGS = $(COMMONFLAGS) -DSOLARIS -g
LIBRARIES =	$(COMMONLIBS) -lsocket -lnsl -lpthread  -lxnet -lposix4 -v 
endif
ifeq '$(OS)' 'AIX'
CC =            xlc_r
CFLAGS = $(COMMONFLAGS) -DAIX -D_THREAD_SAFE -g -q64 -qcpluscmt -qthreaded
LIBRARIES = 	$(COMMONLIBS) -lnsl -lpthread  -lxnet -v
endif

#
# Build rules
#
all:	xdd timeserver gettime

xdd: $(XDD_OBJECTS)
	$(CC) -o $@ $(CFLAGS) $^ $(LIBRARIES)
	mv -f $@ bin/xdd.$(OS)
	rm -f bin/xdd
	ln -s xdd.$(OS) bin/xdd

timeserver: $(TS_OBJECTS) 
	$(CC) -o $@ $(CFLAGS) $^ $(LIBRARIES)
	mv -f timeserver bin/timeserver.$(OS)
	rm -f bin/timeserver
	ln -s timeserver.$(OS) bin/timeserver

gettime: $(GT_OBJECTS) 
	$(CC)  -o $@ $(CFLAGS) $^ $(LIBRARIES)
	mv -f gettime bin/gettime.$(OS)
	rm -f bin/gettime
	ln -s gettime.$(OS) bin/gettime

baseversion:
	echo "#define XDD_BASE_VERSION $(XDDVERSION)" > src/xdd_base_version.h

dist:	clean baseversion tarball
		echo "Base Version $(XDDVERSION) Source Only"

fulldist:	clean baseversion all tarball
		echo "Base Version $(XDDVERSION) built"

tarball:
	tar cfz ../$(PROJECT).$(XDD_VERSION).tgz .

oclean:
	$(info Cleaning the $(OS) OBJECT files )
	rm -f $(XDD_OBJECTS) $(TS_OBJECTS) $(GT_OBJECTS)

clean: oclean
	$(info Cleaning the $(OS) executable files )
	rm -f bin/xdd.$(OS) \
		bin/xdd \
		bin/timeserver.$(OS) \
		bin/timeserver \
		bin/gettime.$(OS) \
		bin/gettime \
		a.out 
	rm -rf doc/doxygen

install: fullinstall

fastinstall: all
	rm -f /sbin/xdd.$(OS) /sbin/xdd
	cp bin/xdd.$(OS) /sbin
	ln /sbin/xdd.$(OS) /sbin/xdd
	rm -f /sbin/timeserver.$(OS) /sbin/timeserver
	cp bin/timeserver.$(OS) /sbin
	ln /sbin/timeserver.$(OS) /sbin/timeserver
	rm -f /sbin/gettime.$(OS) /sbin/gettime
	cp bin/gettime.$(OS) /sbin
	ln /sbin/gettime.$(OS) /sbin/gettime

fullinstall:
	$(INSTALL) -d $(INSTALL_DIR)/bin
	$(INSTALL) -c -m 755 bin/xdd.$(OS) $(INSTALL_DIR)/bin/xdd.$(OS)
	$(INSTALL) -c -m 755 bin/xdd.$(OS) $(INSTALL_DIR)/bin/xdd
	$(INSTALL) -c -m 755 bin/timeserver.$(OS) $(INSTALL_DIR)/bin/timeserver.$(OS)
	$(INSTALL) -c -m 755 bin/timeserver.$(OS) $(INSTALL_DIR)/bin/timeserver
	$(INSTALL) -c -m 755 bin/gettime.$(OS) $(INSTALL_DIR)/bin/gettime.$(OS)
	$(INSTALL) -c -m 755 bin/gettime.$(OS) $(INSTALL_DIR)/bin/gettime
	$(INSTALL) -c -m 755 contrib/xddcp $(INSTALL_DIR)/bin/xddcp
	$(INSTALL) -c -m 755 contrib/xddft $(INSTALL_DIR)/bin/xddft

doc:
	doxygen doc/Doxyfile
	cd doc/doxygen/latex && make pdf

#
# Make meta-directives
#
.PHONY: all clean doc fastinstall install oclean tarball
