#!/bin/env python

# Import modules
import xdd_settings
import xdd
import unittest

# Standard testing strategy: try to check each side of each branch statement
# for correctness

# Test constructor method of FlowBuilderFactory
class FlowBuilderFactoryTestCase(unittest.TestCase):
    """Test FlowBuilderFactory constructor"""

    def test(self):
        """Test basic construction"""
        factory = xdd.FlowBuilderFactory(1024, 4096, 
                                         "/dev/zero", False, False, False, False,
                                         [{'hostname': 'localhost', 'threads':1,  'port':40000, 'ifs':['localhost']}],
                                         "/dev/null", False, False, False, False,
                                         [{'hostname': 'localhost', 'threads':1,  'port':40000, 'ifs':['localhost']}])
        self.assertEqual(1, 1)

# Test createFlowBuilders method of FlowBuilderFactory
class FlowBuilderFactoryCreateFlowBuildersTestCase(unittest.TestCase):
    """Test FlowBuilderFactory constructor"""

    def testSimpleLoopback(self):
        """Test a simple loopback"""
        factory = xdd.FlowBuilderFactory(1024, 4096, 
                                         "/dev/zero", False, False, False, False,
                                         [{'hostname': 'localhost', 'threads':1, 'port':40000, 'ifs':['localhost']}],
                                         "/dev/null", False, False, False, False,
                                         [{'hostname': 'localhost', 'threads':1, 'port':40000, 'ifs':['localhost']}])
        factory.createFlowBuilders()
        self.assertEqual(1, len(factory.getSinkFlowBuilders()))
        self.assertEqual(1, len(factory.getSourceFlowBuilders()))
        self.assertEqual(2, len(factory.getFlowBuilders()))

    def testTwoSources(self):
        """Test a loopback with 2 sources and 1 sink"""
        factory = xdd.FlowBuilderFactory(1024, 4096, 
                                         "/dev/zero", False, False, False, False,
                                         [{'hostname': 'localhost', 'threads':1, 'port':40000, 'ifs':['localhost']},
                                          {'hostname': 'localhost', 'threads':1, 'port':40000, 'ifs':['localhost']}],
                                         "/dev/null", False, False, False, False,
                                         [{'hostname': 'localhost', 'threads':2, 'port':40000, 'ifs':['localhost']}])
        factory.createFlowBuilders()
        self.assertEqual(1, len(factory.getSinkFlowBuilders()))
        self.assertEqual(2, len(factory.getSourceFlowBuilders()))
        self.assertEqual(3, len(factory.getFlowBuilders()))

class FlowBuilderFactoryCreateIfaceListTestCase(unittest.TestCase):
    """Test the createIfaceList method"""
    
    def testTransferManagerSink(self):
        """
        Test iface converter using a spec directly from the TransferManager
        """
        tm = xdd.TransferManager()
        tm.addSink("localhost", 1)
        
        factory = xdd.FlowBuilderFactory(0,0,
                                         '',False,False,False,False, [],
                                         '',False,False,False,False, [])
        ifs = factory.createIfaceList(tm.sinks[0])
        self.assertEqual(1, len(ifs))
        self.assertEqual(('localhost', 40000, 1, ), ifs[0])
        
    def testTransferManagerSource(self):
        """
        Test iface converter using a spec directly from the TransferManager
        """
        tm = xdd.TransferManager()
        tm.addSource("localhost", 1)
        
        factory = xdd.FlowBuilderFactory(0,0,
                                         '',False,False,False,False, [],
                                         '',False,False,False,False, [])
        ifs = factory.createIfaceList(tm.sources[0])
        self.assertEqual(1, len(ifs))
        self.assertEqual(('localhost', 40000, 1, ), ifs[0])
        

if __name__ == '__main__':
    unittest.main()
